<templateSet group="takeit">
  <template name="uxbscript" value="&lt;script th:inline=&quot;javascript&quot;&gt;&#10;    Take(function () {&#10;        // 대상 form&#10;        const $objForm = $('#폼아이디');&#10;        const $divMain = $('#divMain', $objForm);&#10;        const $divDetail = $('#divDetail', $objForm);&#10;&#10;        // datasource, form 바인딩 정보&#10;        let 코드데이터소스명 = fnClear();&#10;        let 데이터소스명 = fnClear();&#10;        const divMainBinder = Take.getBindingOption($divMain, {데이터소스명});&#10;        const divDetailBinder = Take.getBindingOption($divDetail, {데이터소스명, 코드데이터소스명});&#10;&#10;        // 조회&#10;        fnCode();&#10;&#10;        // datasource 바인딩&#10;        function fnBind() {&#10;            divMainBinder.bind({데이터소스명});&#10;            divDetailBinder.bind({데이터소스명, 코드데이터소스명});&#10;        }&#10;&#10;        function fnCode() {&#10;            Take.trancode([{&#10;                groupId: '코드아이디',&#10;                headerType: 'SEL',&#10;                datasourceId: '코드데이터소스명'&#10;            }])&#10;                .then(data =&gt; {&#10;                    //성공&#10;                    if (!data.resultData) return;&#10;                    코드데이터소스명 = data.resultData.코드데이터소스명;&#10;&#10;                    fnSearch();&#10;                });&#10;        }&#10;&#10;        /** 조회 **/&#10;        function fnSearch() {&#10;            데이터소스명 = fnClear();&#10;            fnSave = fnUpdate;&#10;&#10;            Take.transaction({url : '/api/조회url'})&#10;                .then(data =&gt; {&#10;                    //성공&#10;                    데이터소스명 = data.resultData ? data.resultData : fnClear();&#10;                    fnBind();&#10;                })&#10;                .catch(err =&gt; {&#10;                    //실패&#10;                    //console.error(err);&#10;                });&#10;        }&#10;&#10;        /** 신규 **/&#10;        function fnAdd() {&#10;            데이터소스명 = fnClear();&#10;            fnBind();&#10;&#10;            fnSave = fnCreate;&#10;        }&#10;&#10;        /** 저장 **/&#10;        function fnSave() {&#10;        }&#10;&#10;        /** 생성 **/&#10;        function fnCreate() {&#10;            Take.transaction({url : `/api/생성url`, method : 'POST', data: 데이터소스명})&#10;                .then(data =&gt; {&#10;                    if (data.resultCode !== 'SUCC') {&#10;                        if (data.resultCode === 'BIND_ERR') {&#10;                            alert(data.resultData[0].message );&#10;                        }&#10;                        return;&#10;                    }&#10;&#10;                    //성공&#10;                    fnSearch();&#10;                })&#10;                .catch(err =&gt; {&#10;                    //실패&#10;                    console.error(err);&#10;                });&#10;        }&#10;&#9;&#10;&#9;/** 수정 **/&#10;        function fnUpdate() {&#10;            Take.transaction({url : `/api/수정url`, method : 'PUT', data: 데이터소스명})&#10;                .then(data =&gt; {&#10;                    if (data.resultCode !== 'SUCC') {&#10;                        if (data.resultCode === 'BIND_ERR') {&#10;                            alert(data.resultData[0].message );&#10;                        }&#10;                        return;&#10;                    }&#10;&#10;                    //성공&#10;                    fnSearch();&#10;                })&#10;                .catch(err =&gt; {&#10;                    //실패&#10;                    console.error(err);&#10;                });&#10;        }&#10;&#10;        /** 삭제 **/&#10;        function fnDelete() {&#10;            Take.transaction({url : `/api/삭제url`, method : 'DELETE', data: 데이터소스명})&#10;                .then(data =&gt; {&#10;                    //성공&#10;                    데이터소스명 = fnClear();&#10;                    fnBind();&#10;                })&#10;                .catch(err =&gt; {&#10;                    //실패&#10;                    console.error(err);&#10;                });&#10;        }&#10;&#10;        /** datasource 초기화 **/&#10;        function fnClear() {&#10;            return {&#10;                loginPolicy: {&#10;                }&#10;            }; //최소 1개의 OBJECT가 있어야 함!!!&#10;        }&#10;&#10;        /** 조회 버튼 **/&#10;        Take('#btnSearch', $objForm).on('click', function (e) {&#10;            fnSearch();&#10;        });&#10;&#10;        /** 신규 버튼 **/&#10;        Take('#btnAdd', $objForm).on('click', function (e) {&#10;            fnAdd();&#10;        });&#10;&#10;        /** 저장 버튼 **/&#10;        Take('#btnSave', $objForm).on('click', function (e) {&#10;            fnSave();&#10;        });&#10;&#10;        /** 삭제 버튼 **/&#10;        Take('#btnDel', $objForm).on('click', function (e) {&#10;            fnDelete();&#10;        });&#10;&#10;        /** 디버깅용 **/&#10;        Take(document, $objForm).click(function () {&#10;            const dsObj = 데이터소스명;&#10;            Take('#pageDebugBody .log', $objForm).text(JSON.stringify(dsObj, null, 4));&#10;        }).click();&#10;    });&#10;&lt;/script&gt;" description="uxbscript" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="HTML_TEXT" value="true" />
    </context>
  </template>
</templateSet>